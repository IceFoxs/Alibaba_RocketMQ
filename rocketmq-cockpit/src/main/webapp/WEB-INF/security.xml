<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-3.2.xsd">


    <security:http pattern="/js/**" security="none" />
    <security:http pattern="/css/**" security="none" />
    <security:http pattern="/img/**" security="none" />
    <security:http pattern="/rocketmq/**" security="none" />
    <security:http pattern="/**/captcha-image" security="none" />

    <security:http auto-config="true" >
        <security:custom-filter ref="rocketMQLoginFilter" before="FORM_LOGIN_FILTER" />
        <security:intercept-url pattern="/cockpit/login.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/cockpit/captcha-image.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/**" access="ROLE_ADMIN"/>
        <security:form-login authentication-failure-handler-ref="rocketMQUserLoginFailedHandler"
                             default-target-url="/cockpit/home.jsp"
                             login-page="/cockpit/login.jsp"
                             authentication-failure-url="/cockpit/login.jsp?error=true"/>
        <!-- Use the comment out line in production -->
        <!--
        <security:intercept-url pattern="/**" access="ROLE_ADMIN" requires-channel="https" />
        -->
        <security:session-management>
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="false"  />
        </security:session-management>
    </security:http>

    <security:authentication-manager alias="myAuthenticationManager">
        <security:authentication-provider  user-service-ref="userService">
            <security:password-encoder hash="md5">
                <security:salt-source user-property="username"  />
            </security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="rocketMQLoginFilter" class="com.ndpmedia.rocketmq.authentication.RocketMQLoginFilter" />
    <!--
            通过 RocketMQUserDetailsService,Spring会控制用户的访问级别.
            也可以理解成:以后我们和数据库操作就是通过RocketMQUserDetailsService来进行关联.
         -->
    <bean id="userService" class="com.ndpmedia.rocketmq.authentication.RocketMQUserDetailsService" >
        <property name="cockpitDao" ref="cockpitDao" />
    </bean>

    <bean id="rocketMQUserLoginFailedHandler"
          class="com.ndpmedia.rocketmq.authentication.RocketMQUserLoginFailedHandler" >
    </bean>

    <bean id="loginController" class="com.ndpmedia.rocketmq.cockpit.controller.LoginController" >

    </bean>
</beans>