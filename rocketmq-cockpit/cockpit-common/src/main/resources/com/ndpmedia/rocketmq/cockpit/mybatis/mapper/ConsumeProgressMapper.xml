<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ndpmedia.rocketmq.cockpit.mybatis.mapper.ConsumeProgressMapper">

    <insert id="insert" parameterType="ConsumeProgress">
        INSERT INTO consume_progress(id, consumer_group, topic, broker_name, queue_id, broker_offset, consumer_offset, last_timestamp, diff, create_time)
        VALUES (NULL, #{consumerGroup}, #{topic}, #{brokerName}, #{queueId}, #{brokerOffset}, #{consumerOffset}, #{lastTimestamp}, #{diff}, #{createTime})
    </insert>

    <delete id="delete" parameterType="long">
        DELETE
        FROM consume_progress
        WHERE id = #{id}
    </delete>

    <delete id="bulkDelete" parameterType="date">
        DELETE
        FROM consume_progress
        WHERE create_time > #{date}
    </delete>

    <resultMap id="consumerGroupMap" type="ConsumerGroup">
        <id column="id" property="id" />
        <result column="cluster_name" property="clusterName" />
        <result column="which_broker_when_consume_slowly" property="whichBrokerWhenConsumeSlowly" />
        <result column="group_name" property="groupName" />
        <result column="consume_enable" property="consumeEnable" />
        <result column="consume_broadcast_enable" property="consumeBroadcastEnable" />
        <result column="broker_address" property="brokerAddress" />
        <result column="broker_id" property="brokerId" />
        <result column="retry_max_times" property="retryMaxTimes" />
        <result column="retry_queue_num" property="retryQueueNum" />
        <result column="consume_from_min_enable" property="consumeFromMinEnable" />
        <result column="status_id" property="status"
                typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"
                javaType="com.ndpmedia.rocketmq.cockpit.model.Status" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <resultMap id="consumeProgressMap" type="ConsumeProgress">
        <id column="id" property="id" />
        <result column="topic" property="topic" />
        <result column="broker_name" property="brokerName" />
        <result column="queue_id" property="queueId" />
        <result column="broker_offset" property="brokerOffset" />
        <result column="last_timestamp" property="lastTimestamp" />
        <result column="diff" property="diff" />
        <result column="create_time" property="createTime" />
        <result column="consumer_group" property="consumerGroup" />
    </resultMap>

    <select id="consumerGroupList" resultType="string">
        SELECT consumer_group
        FROM consume_progress
        WHERE 1 = 1

        GROUP BY consumer_group
    </select>

    <select id="topicList" resultType="string">
        SELECT topic
        FROM consume_progress
        WHERE 1 = 1

        <if test="consumerGroup != null">
            AND consumer_group = #{consumerGroup}
        </if>
        GROUP BY topic
    </select>

    <select id="brokerList" resultType="string">
        SELECT broker_name
        FROM consume_progress
        WHERE 1 = 1

        <if test="consumerGroup != null">
            AND consumer_group = #{consumerGroup}
        </if>

        <if test="topic != null">
            AND topic = #{topic}
        </if>

        GROUP BY broker_name
    </select>

    <select id="queueList" resultType="string">
        SELECT queue_id
        FROM consume_progress
        WHERE 1 = 1

        <if test="consumerGroup != null">
            AND consumer_group = #{consumerGroup}
        </if>

        <if test="topic != null">
            AND topic = #{topic}
        </if>

        <if test="brokerName != null">
            AND broker_name = #{brokerName}
        </if>

        GROUP BY queue_id
    </select>

    <select id="diffList" resultMap="consumeProgressMap">
        SELECT sum(diff) as diff, create_time

        <if test="consumerGroup != null">
            , consumer_group
        </if>

        <if test="topic != null">
            , topic
        </if>

        <if test="brokerName != null">
            , broker_name
        </if>

        <if test="queueId > -1">
            , queue_id
        </if>
        FROM consume_progress
        WHERE 1 = 1

        <if test="consumerGroup != null">
            AND consumer_group = #{consumerGroup}
        </if>

        <if test="topic != null">
            AND topic = #{topic}
        </if>

        <if test="brokerName != null">
            AND broker_name = #{brokerName}
        </if>

        <if test="queueId > -1">
            AND queue_id = #{queueId}
        </if>

        GROUP BY create_time

        <if test="consumerGroup != null">
            , consumer_group
        </if>

        <if test="topic != null">
            , topic
        </if>

        <if test="brokerName != null">
            , broker_name
        </if>

        <if test="queueId > -1">
            , queue_id
        </if>
        ORDER BY create_time limit 1000
    </select>

    <select id="list" resultMap="consumeProgressMap">
        SELECT id, consumer_group, topic, broker_name, queue_id, broker_offset, consumer_offset, last_timestamp, diff, create_time
        FROM consume_progress
        WHERE 1 = 1

        <if test="consumerGroup != null">
            AND consumer_group = #{consumerGroup}
        </if>

        <if test="topic != null">
            AND topic = #{topic}
        </if>

        <if test="brokerName != null">
            AND broker_name = #{brokerName}
        </if>

        <if test="queueId > -1">
            AND queue_id = #{queueId}
        </if>
        ORDER BY consumer_group , topic, broker_name, queue_id, create_time desc limit 1000
    </select>
</mapper>